# .env.example - Copy to .env and fill in values for local development

PROJECT_NAME="OSP Backend (Dev)"
API_V1_STR="/api/v1"
DEBUG=True

DATABASE_URL="postgresql+asyncpg://osp_user:yoursecurepassword@localhost:5432/osp_dev_db"

TEMP_UPLOAD_DIR="/tmp/osp_uploads_dev"

# --- S3/MinIO Configuration ---
# Set S3_ENABLED to true to use S3/MinIO, otherwise it uses local temp storage.
S3_ENABLED=False # Set to True to activate S3 below

# For MinIO (example):
S3_ENDPOINT_URL="http://localhost:9000"
S3_ACCESS_KEY_ID="YOUR_MINIO_ACCESS_KEY"       # e.g., minioadmin
S3_SECRET_ACCESS_KEY="YOUR_MINIO_SECRET_KEY" # e.g., minioadmin
S3_BUCKET_NAME="osp-dev-bucket"
S3_REGION_NAME="" # Often not needed for MinIO, or set to your MinIO region if configured
S3_USE_SSL=False # Typically False for local MinIO using http

# For AWS S3 (example):
# S3_ENDPOINT_URL="https://s3.your-aws-region.amazonaws.com" # Or leave blank for default AWS S3 endpoint resolution
# S3_ACCESS_KEY_ID="YOUR_AWS_ACCESS_KEY_ID"
# S3_SECRET_ACCESS_KEY="YOUR_AWS_SECRET_ACCESS_KEY"
# S3_BUCKET_NAME="your-unique-osp-s3-bucket-name"
# S3_REGION_NAME="your-aws-region" # e.g., us-east-1
# S3_USE_SSL=True

# --- Celery/Redis Configuration ---
# Set CELERY_ENABLED to true to use Celery for background tasks.
CELERY_ENABLED=False # Set to True to activate Celery below
CELERY_BROKER_URL="redis://localhost:6379/0"    # Ensure Redis is running here
CELERY_RESULT_BACKEND="redis://localhost:6379/0" # Ensure Redis is running here
# CELERY_TASK_DEFAULT_QUEUE="osp_default_queue"
# CELERY_TASK_ROUTES='{"app.tasks.debug_task": {"queue": "osp_debug_queue"}}' # JSON string format for dict in env

# --- Security Settings ---
API_KEY_PEPPER="generate_a_very_strong_random_pepper_string_for_production_and_keep_it_secret"
ADMIN_API_KEY="generate_a_strong_admin_api_key_for_device_registration_and_keep_it_secret"

# --- JWT Settings ---
# IMPORTANT: Generate a strong, unique secret key for production!
# Use: openssl rand -hex 32
JWT_SECRET_KEY="your_super_secret_jwt_key_generated_with_openssl_rand_hex_32"
# JWT_ALGORITHM="HS256" # Usually defined in config.py
# JWT_ACCESS_TOKEN_EXPIRE_MINUTES=1440 # 1 day, defined in config.py